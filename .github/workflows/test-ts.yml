name: Run TS tests
on:
  workflow_call:
    inputs:
      submodules:
        default: false
        required: false
        type: boolean
      runs-on:
        default: ubuntu-24.04-arm
        required: false
        type: string
  workflow_dispatch:
jobs:
  node:
    name: Node v${{ matrix.node }} ts
    runs-on: ${{ matrix.os }}
    env:
      MSHOULD_FAST: 1
    strategy:
      matrix: # May 2025 LTS versions. In release.yml, we hardcode specific v1.2.3 for determinism.
        node: [22, 24] # In tests, it's better to have latest node updates instead.
        os: [ubuntu-24.04-arm, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@1e31de5234b9f8995739874a8ce0492dc87873e2 # v4
        with:
          persist-credentials: false
          submodules: ${{ inputs.submodules }}
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4
        with:
          registry-url: "https://registry.npmjs.org"
          cache: npm
          node-version: ${{ matrix.node }}
      - run: npm install
      - run: npm run build --if-present
      - run: npm test
  nodeold:
    name: Node v${{ matrix.node }} ts (compiled)
    runs-on: ${{ inputs.runs-on }}
    env:
      MSHOULD_FAST: 1
    strategy:
      matrix: # May 2025 LTS versions. In release.yml, we hardcode specific v1.2.3 for determinism.
        node: [20]
    steps:
      - uses: actions/checkout@1e31de5234b9f8995739874a8ce0492dc87873e2 # v4
        with:
          persist-credentials: false
          submodules: ${{ inputs.submodules }}
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4
        with:
          registry-url: "https://registry.npmjs.org"
          cache: npm
          node-version: ${{ matrix.node }}
      - run: npm install
      - run: npm run build --if-present
      - run: npm run test:node20 --if-present
  bun:
    name: Bun
    runs-on: ${{ inputs.runs-on }}
    env:
      MSHOULD_FAST: 1
    steps:
      - uses: actions/checkout@1e31de5234b9f8995739874a8ce0492dc87873e2 # v4
        with:
          persist-credentials: false
          submodules: ${{ inputs.submodules }}
      - uses: oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5 # v2.0.1
        with:
          bun-version: latest
      - run: bun install
      - run: bun run --if-present build
      - run: bun run --if-present test:bun
  deno:
    name: Deno
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@1e31de5234b9f8995739874a8ce0492dc87873e2 # v4
        with:
          persist-credentials: false
          submodules: ${{ inputs.submodules }}
      - uses: denoland/setup-deno@909cc5acb0fdd60627fb858598759246509fa755 # v2.0.2
        with:
          deno-version: v2.x
      - run: grep -q 'test:deno' package.json && deno install || exit 0
        name: Run deno install if test:deno is present
      - run: grep -q 'build' package.json && deno task build || exit 0
        name: Run build if present
      - run: grep -q 'test:deno' package.json && deno task test:deno || exit 0
        name: Run test:deno if present
  lint:
    name: Lint
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@1e31de5234b9f8995739874a8ce0492dc87873e2 # v4
        with:
          persist-credentials: false
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4
        with:
          registry-url: "https://registry.npmjs.org"
          cache: npm
      - run: npm install
      - run: npm run build --if-present
      - run: npm run lint --if-present
  coverage:
    name: Measure coverage
    runs-on: ${{ inputs.runs-on }}
    env:
      MSHOULD_FAST: 0 # Disable parallelism for coverage
    steps:
      - uses: actions/checkout@1e31de5234b9f8995739874a8ce0492dc87873e2 # v4
        with:
          persist-credentials: false
          submodules: ${{ inputs.submodules }}
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4
        with:
          registry-url: "https://registry.npmjs.org"
          cache: npm
      - run: npm install
      - run: npm run build --if-present
      - run: npm install --no-save c8@10.1.2 # Don't want lockfiles. Any better way?
      - run: npx c8 npm run test:node20 --if-present
